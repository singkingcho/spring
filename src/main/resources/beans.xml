<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:c="http://www.springframework.org/schema/c"
	     xmlns:aop="http://www.springframework.org/schema/aop"  
	  xmlns:context = "http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
<!-- 	如果要启用注解，加入上下文的约束，下面这一行将启用注解 -->
	<context:annotation-config></context:annotation-config>
	<context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
<!--	书写bean
	id:为bean作一个唯一标记
	class：表名这个bean所代表的类 
		内部配置这个bean的属性
		属性对应的名称和值，这个bean一旦配置好，就可以由容器来帮忙创建对象
	 init-method：初始化的时候就会执行
	-->
	<bean id="helloWorld" class="com.bdqn.bean.HelloWorld" init-method="init" destroy-method="destroy"
		  >
		<property name="msg" value="你的头发还好吗" ></property>
	</bean>
	
	<bean id="girl" class="com.bdqn.bean.Girl">
		<property name="age" value="18"></property>
		<property name="name" value="朱茵"></property>
	</bean>
<!-- 	parent:通过这个属性可以描述它和另外的bean之间的关系， -->
	<bean id="prettyGirl" class="com.bdqn.bean.PrettyGirl" parent="girl">
		<property name="love" value="88"></property>
	</bean>
	
	<bean id="boy" class="com.bdqn.bean.Boy">
<!-- 		构造注入  指定名称和值就可了。 -->
		<constructor-arg name="age" value="22">
		</constructor-arg>
		<constructor-arg name="name" value="张学友"></constructor-arg>
	</bean>
	
	<bean id="textEditor" class="com.bdqn.bean.TextEditor">
<!-- 		通过ref去引用其它的bean -->
<!-- 		<property name="spellCheker" ref="spellChecker"></property> -->
	</bean>
	<bean id="spellChecker" class="com.bdqn.bean.SpellChecker">
	</bean>
	
	<bean id="myCollection" class="com.bdqn.bean.MyCollection">
		<property name="addressList" >
			<list>
				<value>东莞</value>
				<value>广州</value>
				<value>深圳</value>
				<value>虎门</value>
			</list>
		</property>
		
		<property name="girls">
			<set >
<!-- 				 可以通过rel标签对其它的bean进行引用 -->
				 <ref bean="girl"/>
				 <ref bean="prettyGirl"/>
			</set>
		</property>
		<property name="maps">
			<map>
				<entry key="CN" value="中国">
				</entry>
				<entry key="EN" value="美国">
				</entry>
			</map>
		</property>
		
		<property name="properties">
			<props>
				<prop key="ab" >杨颖</prop>
				<prop key="james">詹姆斯</prop>
			</props>
		</property>
	</bean>
	
	<bean id="empty" class="com.bdqn.bean.EmptyOrNull">
<!-- 		注入空字符串 -->
		<property name="name" value=""></property>
	</bean>
	<bean id="empty2" class="com.bdqn.bean.EmptyOrNull" >
		<property name="name">
<!-- 			通过null标签注入null值 -->
			<null></null>
		</property>
	</bean>
	
	<bean id="helloP" class="com.bdqn.bean.HelloP" p:id="3" p:name="张良">
	</bean>
	
	<bean id="helloP2" class="com.bdqn.bean.HelloP" c:id="6" c:name="罗成">
	
	</bean>
	
	 <bean id="fight" class="com.bdqn.bean.CNMan">
	 	<constructor-arg ref="request"></constructor-arg>
	 </bean>
	 <bean id="request" class="com.bdqn.bean.BabyRequest">
	 </bean>
	 <bean id="aopBean" class="com.bdqn.bean.AopBean">
	 </bean>
	 
	 <bean id="initAndDestroy" class="com.bdqn.bean.InitAndDesctroy"
	 	init-method="init" destroy-method="destroy"  
	 >
	 </bean>
	 
<!--	 数据源的配置-->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	 	<property name="user" value="${user}"></property>
	 	<property name="password" value="${password}"></property>
	 	<property name="driverClass" value="${driverClass}"></property>
	 	<property name="jdbcUrl" value="${jdbcUrl}"></property>
	 </bean>
	 <aop:config>
	 	<aop:aspect ref="aopBean">
	 		<aop:pointcut expression="execution(* com.bdqn.*.*(..))" id="helloAop"/>
	 		<aop:before method="before" pointcut-ref="helloAop"/>
			<aop:after method="after" pointcut-ref="helloAop"/>
	 	</aop:aspect>
	 	
	 	
	 </aop:config>
</beans>
